//#[ExternC] [] sin(v: f64) : f64;
//#[ExternC] [] cos(v: f64) : f64;
//#[ExternC] [] tan(v: f64) : f64;
//#[ExternC] [] srand(seed: u32) : void;
//#[ExternC] [] rand() : i32;

#[ExternC] [] sqrtf(v: f32) : f32;
#[ExternC] [] puts(str: char*) : i32;
#[ExternC] [] printf(fmt: char*, ...) : i32;
#[ExternC] [] scanf(fmt: char*, ...) : i32;
#[ExternC] [] Sleep(dwMilliseconds: u32) : void;
#[ExternC] [] system(_Command: char*) : i32;

class Vector2(var x: f32, var y: f32)
{
    this() : this(0.0, 0.0);
    var X: f32
    {
        get => this.x;
        set => this.x = value;
    }
    val Magnitude: f32 => sqrtf(x * x + y * y);
}

val Right: Vector2 = Vector2(1, 0);

[] nextInt() : i32
{
    var v: i32;
    scanf(+"%i", &v);
    return v;
}

[] next2Int() : (i32, i32) => (nextInt(), nextInt());

[] TestPrint(count: i32 = 16)
{
    for (var i = 0; i < count; ++i)
        printf(+"Hello: %i\n", i + 1);
}

[] Main(argc: i32, argv: char**) : i32
{
    TestPrint(4);
    val ptr = new (i32, i64, f32);
    for (var i = 0; i < argc; ++i)
        puts(argv[i]);
    return 0;
}
